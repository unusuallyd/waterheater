C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE SDS
OBJECT MODULE PLACED IN sds.OBJ
COMPILER INVOKED BY: c:\Keil\C51\BIN\C51.EXE sds.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include <intrins.h>
   3          
   4          #define uchar unsigned char 
   5          #define uint unsigned int
   6          
   7          #define ROW1 0x80
   8          #define ROW2 0x90
   9          #define ROW3 0x88
  10          #define ROW4 0x98
  11          
  12          #define E_set P2|=(1<<5) //液晶使能
  13          #define E_clear P2&=~(1<<5)
  14          #define RW_set P2|=(1<<6) //液晶读写
  15          #define RW_clear P2&=~(1<<6)
  16          #define RS_set P2|=(1<<7) //液晶数据
  17          #define RS_clear P2&=~(1<<7) //液晶指令
  18          #define Self_Define_ISP_Download_Command 0x3D
  19          sfr IAP_CONTR=0xE7;
  20          unsigned char j=0;
  21          
  22          unsigned char yb=0x80;
  23          
  24          
  25          unsigned char code AC_TABLE[]={
  26          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,      //第一行汉字位置
  27          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,      //第二行汉字位置
  28          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,      //第三行汉字位置
  29          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,      //第四行汉字位置
  30          };
  31          
  32          
  33          /*****************************************
  34          Fucntion: delay10US(char x)
  35          Description: delay for 10 us
  36          Parameter: x
  37          Author: [email]kassey@126.com[/email]
  38          Date:   July,7th,2005
  39          *****************************************/
  40          void delayms(unsigned int z)
  41          {
  42   1              unsigned int x,y;
  43   1              for(x=z;x>0;x--)
  44   1                      for(y=110;y>0;y--);
  45   1      }
  46          
  47          void delay10US(uchar x)
  48          {
  49   1         uchar k;
  50   1      for(k=0;k<x;k++);
  51   1      
  52   1      }
  53          
  54          /*****************************************
  55          Fucntion: delay1MS(char x)
C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 2   

  56          Description: delay for 10 us
  57          Parameter:  x  delay for 1MS
  58          Author: [email]kassey@126.com[/email]
  59          Date:   July,7th,2005
  60          *****************************************/
  61          
  62          
  63          void delay1MS(uchar x)
  64          {  
  65   1         uchar k,j;
  66   1         x=x<<1;
  67   1      for(k=0;k<x;k++)
  68   1        for(j=0;j<255;j++)_nop_();
  69   1      
  70   1      
  71   1      }
  72          
  73          
  74          
  75          
  76          void SendCMD(uchar CMD)
  77          {
  78   1              E_clear;
  79   1              RS_clear;
  80   1              RW_clear;
  81   1              delayms(1);
  82   1              P0=CMD;
  83   1              E_set;
  84   1              delayms(2); //如果没有延时就必须要加查忙指令
  85   1              E_clear;
  86   1      
  87   1      }
  88          
  89           
  90          
  91          
  92          void SendData(uchar Data)
  93          {
  94   1              E_clear;
  95   1              RS_set;
  96   1              RW_clear;
  97   1              delayms(1);
  98   1              P0=Data;
  99   1              E_set;
 100   1              delayms(1);//如果没有延时就必须要加查忙指令
 101   1              E_clear;
 102   1      }
 103          
 104          void LCDInit()
 105          {
 106   1      
 107   1           SendCMD(0x30);//功能设置，一次送8位数据，基本指令集
 108   1           SendCMD(0x0C);//0000,1100  整体显示，游标off，游标位置off
 109   1           SendCMD(0x01);//0000,0001 清DDRAM
 110   1           SendCMD(0x02);//0000,0010 DDRAM地址归位
 111   1           SendCMD(0x80);//1000,0000 设定DDRAM 7位地址000，0000到地址计数器AC//     
 112   1           SendCMD(0x04);//点设定，显示字符/光标从左到右移位，DDRAM地址加 一//   
 113   1           SendCMD(0x0C);//显示设定，开显示，显示光标，当前显示位反白闪动
 114   1      
 115   1        
 116   1      }
 117          
C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 3   

 118           
 119          
 120          /*****************************
 121          清文本区
 122          *****************************/
 123          void LcmClearTXT( void )
 124          {
 125   1           unsigned char i;
 126   1           SendCMD(0x30);      //8BitMCU,基本指令集合
 127   1           SendCMD(0x80);      //AC归起始位
 128   1           for(i=0;i<64;i++)
 129   1              SendData(0x20);
 130   1      }
 131          
 132          /*****************************
 133          发送字符串
 134          *****************************/
 135          void PutStr(unsigned char row,unsigned char col,unsigned char *puts)
 136          {
 137   1           SendCMD(0x30);      //8BitMCU,基本指令集合
 138   1           SendCMD(AC_TABLE[8*row+col]);      //起始位置
 139   1           while(*puts != '\0')      //判断字符串是否显示完毕
 140   1           {
 141   2                 if(col==8)            //判断换行
 142   2                 {            //若不判断,则自动从第一行到第三行
 143   3                       col=0;
 144   3                       row++;
 145   3                 }
 146   2                 if(row==4) row=0;      //一屏显示完,回到屏左上角
 147   2                 SendCMD(AC_TABLE[8*row+col]);
 148   2                 SendData(*puts);      //一个汉字要写两次
 149   2                 puts++;
 150   2                 SendData(*puts);
 151   2                 puts++;
 152   2                 col++;
 153   2           }
 154   1      }
 155          
 156          /*****************************
 157          绘图
 158          *****************************/
 159          void PutBMP(unsigned char *puts)
 160          {
 161   1           unsigned int x=0;
 162   1           unsigned char i,j;
 163   1           SendCMD(0x34);      //8Bit扩充指令集,即使是36H也要写两次
 164   1           SendCMD(0x36);      //绘图ON,基本指令集里面36H不能开绘图
 165   1           for(i=0;i<32;i++)            //12864实际为256x32
 166   1           {
 167   2                 SendCMD(0x80|i);      //行位置
 168   2                 SendCMD(0x80);      //列位置
 169   2                 for(j=0;j<32;j++)      //256/8=32 byte
 170   2                 {            //列位置每行自动增加
 171   3                       SendData(puts[x]);
 172   3                       x++;
 173   3                 }
 174   2           }
 175   1      }
 176          
 177           
 178          
 179          
C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 4   

 180          void  ClearScreen()
 181          {    uchar  i,j,x,y;
 182   1           LCDInit();
 183   1         SendCMD(0x3e);// ;RE=1  扩展指令选择  G=1  开图形显示 
 184   1            x=0x80;
 185   1            y=0x80;
 186   1            for(j=0;j<64;j++)
 187   1            {
 188   2            y=0x80;
 189   2           SendCMD(x);
 190   2           SendCMD(y);
 191   2             for(i=0;i<32;i++)
 192   2            {
 193   3             SendData(0x00);
 194   3            
 195   3            }
 196   2            x=x+1;
 197   2            }
 198   1           
 199   1      }
 200          
 201          void Sendint(uint dd)
 202          {
 203   1      SendData(dd>>8);
 204   1      SendData(dd);
 205   1      }
 206          
 207          /*****************************
 208          打点  x=0:128;  y=0:64;
 209          *****************************/
 210          void Gra(uchar x,uchar y)
 211          {
 212   1      uchar xx,yy;
 213   1      SendCMD(0x34);
 214   1      SendCMD(0x36);
 215   1      xx=x/16;
 216   1      yy=63-y;
 217   1      if(yy>=32){xx=xx+8;yy-=32;}
 218   1      SendCMD(0x80+yy);
 219   1      SendCMD(0x80+xx);
 220   1      Sendint(0x8000>>(x%16));
 221   1      
 222   1      
 223   1      }
 224          
 225           
 226          
 227          uchar code IBM[]=
 228          {
 229          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 230          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xF0,0x00,0xFF,0xFF,0xE0,0x00,0x07,0xFF,0xFE,
 231          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xF0,0x00,0xFF,0xFF,0xE0,0x00,0x0F,0xFF,0xFE,
 232          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xF8,0x00,0xFF,0xFF,0xE0,0x00,0x0F,0xFF,0xFE,
 233          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFC,0x00,0xFF,0xFF,0xF0,0x00,0x1F,0xFF,0xFE,
 234          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 235          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 236          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 237          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 238          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xF8,0x00,0x3F,0xFF,0xFE,
 239          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFC,0x00,0x7F,0xFF,0xFE,
 240          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFC,0x00,0x7F,0xFF,0xFE,
 241          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFC,0x00,0x7F,0xFF,0xFE,
C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 5   

 242          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 243          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 244          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 245          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 246          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 247          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x03,0xFF,0xFE,0x01,0xFF,0xFF,0x00,
 248          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x03,0xFF,0xFF,0x01,0xFF,0xFF,0x00,
 249          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x03,0xFF,0xFF,0x03,0xFF,0xFF,0x00,
 250          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0x80,0x03,0xFF,0xFF,0x83,0xFF,0xFF,0x00,
 251          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 252          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 253          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 254          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 255          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFF,0x00,0x03,0xFF,0xFF,0xCF,0xFF,0xFF,0x00,
 256          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x03,0xFF,0xFF,0xEF,0xFF,0xFF,0x00,
 257          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x03,0xFF,0xFF,0xEF,0xFF,0xFF,0x00,
 258          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFC,0x00,0x03,0xFF,0xBF,0xFF,0xFB,0xFF,0x00,
 259          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 260          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 261          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 262          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 263          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFC,0x00,0x03,0xFF,0x8F,0xFF,0xF3,0xFF,0x00,
 264          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x03,0xFF,0x87,0xFF,0xE3,0xFF,0x00,
 265          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x03,0xFF,0x87,0xFF,0xE3,0xFF,0x00,
 266          0x00,0xFF,0xC0,0x00,0x0F,0xFF,0xFF,0xFF,0x00,0x03,0xFF,0x87,0xFF,0xC3,0xFF,0x00,
 267          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 268          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 269          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 270          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 271          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0x80,0x01,0xFF,0x83,0xFF,0x83,0xFF,0x00,
 272          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x01,0xFF,0x81,0xFF,0x03,0xFF,0x00,
 273          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x01,0xFF,0x81,0xFF,0x03,0xFF,0x00,
 274          0x00,0xFF,0xC0,0x00,0x0F,0xF8,0x00,0xFF,0xC0,0x01,0xFF,0x80,0xFF,0x03,0xFF,0x00,
 275          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 276          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 277          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 278          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 279          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xC0,0x7E,0x03,0xFF,0xFE,
 280          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xC0,0x7C,0x03,0xFF,0xFE,
 281          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xC0,0x3C,0x03,0xFF,0xFE,
 282          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xC0,0x3C,0x03,0xFF,0xFE,
 283          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 284          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 285          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 286          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 287          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFE,0x00,0xFF,0xFF,0xC0,0x18,0x03,0xFF,0xFE,
 288          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFE,0x00,0xFF,0xFF,0xC0,0x18,0x03,0xFF,0xFE,
 289          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xFC,0x00,0xFF,0xFF,0xC0,0x08,0x03,0xFF,0xFE,
 290          0x7F,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xF8,0x00,0xFF,0xFF,0xC0,0x00,0x03,0xFF,0xFE,
 291          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 292          
 293          
 294          };
 295          
 296           
 297          
 298          void Put(uchar *p)
 299          
 300          {
 301   1          uchar xx,yy ;
 302   1      
 303   1        for(yy=0;yy<32;yy++)
C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 6   

 304   1      for(xx=0;xx<8;xx++)
 305   1      {
 306   2      SendCMD(0x80+yy);   //y 按位
 307   2      SendCMD(0x80+xx);//x 按16位
 308   2      SendData(*p);
 309   2      p++;
 310   2      SendData(*p);
 311   2      p++;
 312   2      }
 313   1      
 314   1      
 315   1      for(yy=0;yy<32;yy++)
 316   1      for(xx=8;xx<16;xx++)
 317   1      {
 318   2      SendCMD(0x80+yy);   //y 按位
 319   2      SendCMD(0x80+xx);//x 按16位
 320   2      SendData(*p);
 321   2      p++;
 322   2      SendData(*p);
 323   2      p++;
 324   2      }
 325   1      
 326   1       
 327   1      
 328   1      
 329   1      }
 330          
 331           
 332          
 333          void  Clear()
 334          {    uchar  i,j;
 335   1           LCDInittest();
*** WARNING C206 IN LINE 335 OF SDS.C: 'LCDInittest': missing function-prototype
 336   1        SendCMD(0x34);
 337   1         SendCMD(0x3e);// ;RE=1  扩展指令选择  G=1  开图形显示 
 338   1            
 339   1           for(j=0;j<16;j++)
 340   1           for(i=0;i<32;i++)
 341   1      
 342   1        {
 343   2        SendCMD(0x80+i);
 344   2        SendCMD(0x80+j);
 345   2        SendData(0x00);
 346   2        SendData(0x00);
 347   2        }
 348   1           
 349   1      }
 350          
 351          void main()
 352          { 
 353   1      
 354   1      LCDInittest();
 355   1      LcmClearBMP();
*** WARNING C206 IN LINE 355 OF SDS.C: 'LcmClearBMP': missing function-prototype
 356   1      Put(IBM);
 357   1      
 358   1      while(1)
 359   1      {;}
 360   1      
 361   1      }


C51 COMPILER V8.16   SDS                                                                   09/17/2009 11:26:02 PAGE 7   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    722    ----
   CONSTANT SIZE    =   1040    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
