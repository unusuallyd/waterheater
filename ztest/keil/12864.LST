C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #define uchar unsigned char 
   3          #define uint unsigned int
   4          
   5          
   6          
   7          sbit   EN=P2^2;
   8          sbit   RW=P2^1;
   9          sbit   RS=P2^0;
  10          sbit   ON=P2^1;
  11          
  12          #define LCDb_BASCMD   0x30     // 基本指令集
  13          #define LCDb_CLS   0x01     // 清屏
  14          #define LCDb_HOME   0x02     // 地址返回原点，不改变DDRAM内容
  15          #define LCDb_ENTRY   0x06     // 设定输入模式，光标加，屏幕不移动
  16          
  17          #define LCDb_CURON     0x0E     // 显示光标
  18          #define LCDb_CURFLA   0x0F     // 打开光标闪烁
  19          #define LCDb_C2L   0x10     // 光标左移
  20          #define LCDb_C2R   0x14     // 光标右移
  21          #define LCDb_D2L   0x18     // 屏幕左移
  22          #define LCDb_D2R   0x1C     // 屏幕又移
  23          #define LCDb_ON     0x0C     // 打开显示
  24          #define LCDb_OFF   0x08         // 关闭显示
  25          
  26          #define LCDb_EXTCMD1   0x34     // 扩充指令集，关闭绘图显示
  27          #define LCDb_EXTCMD2   0x36     // 扩充指令集，打开绘图显示
  28          #define LCDb_EXTCLS   0x01     // 清屏
  29          #define LCDb_REVL1   0x04     // 反显第1行
  30          #define LCDb_REVL2   0x05     // 反显第2行
  31          #define LCDb_REVL3   0x06     // 反显第3行
  32          #define LCDb_REVL4   0x07     // 反显第4行
  33          #define sleep   0x08     // 睡眠模式
  34          #define Dissleep   0x08     // 脱离睡眠模式
  35          
  36          
  37          #define E_set EN=1 //液晶使能
  38          #define E_clear EN=0
  39          #define RW_set RW=1 //液晶读写
  40          #define RW_clear RW=0
  41          #define RS_set RS=1 //液晶数据
  42          #define RS_clear RS=0 //液晶指令
  43          sbit beer=P2^0;
  44          unsigned char j=0;
  45          
  46          unsigned char yb=0x80;
  47          unsigned char m=0; 
  48          bit flagCom=0;
  49          bit fbr=1;
  50          unsigned char code name00[]={"飞射白鹿雪连天，"};
  51          unsigned char code name01[]={"笑书神侠倚碧鸳。"};
  52          unsigned char code name02[]={"自古英雄多奇逸，"};
  53          unsigned char code name03[]={"金老挥毫尽使然。"};
  54          unsigned char code name10[]={"李白乘舟将欲行，"};
  55          unsigned char code name11[]={"忽闻岸上踏歌声。"};
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 2   

  56          unsigned char code name12[]={"桃花潭水深千尺，"};
  57          unsigned char code name13[]={"不及汪伦送我情。"};
  58          unsigned char code name20[]={"这是我的128*64液"};
  59          unsigned char code name21[]={"晶显示测试程序，"};
  60          unsigned char code name22[]={"welcome to commu"};
  61          unsigned char code name23[]={"今天的实时温度："};
  62          unsigned char code name24[]={"接收到串口信息："};
  63          unsigned char code name25[]={"EEPROM读取中……"};
  64          unsigned char code name26[]={"读取的EEPROM为："};
  65          unsigned char gotmessage[48]={"                                                "};
  66          
  67          
  68          
  69          
  70          unsigned char code tu1[]={
  71          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  72          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  73          0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,
  74          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
  75          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
  76          0x20,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x04,
  77          0x20,0x40,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x04,
  78          0x20,0x40,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x04,
  79          0x20,0x40,0x01,0xF8,0x00,0x07,0x00,0x00,0x00,0x03,0xC0,0x00,0x00,0x0F,0x08,0x04,
  80          0x20,0x40,0x01,0xF8,0x00,0x07,0x8E,0x00,0x00,0x1F,0xE0,0x00,0x00,0x7F,0xC8,0x04,
  81          0x20,0x40,0x01,0xF8,0x00,0x3F,0xFF,0x00,0x00,0x3F,0xC0,0x00,0x03,0xFF,0xC8,0x04,
  82          0x20,0x4C,0x03,0x70,0x00,0x3F,0x1F,0x00,0x00,0x1F,0x00,0x00,0x1F,0xFF,0xC8,0x04,
  83          0x20,0x47,0x3F,0x70,0x00,0x3E,0x0E,0x00,0x00,0x0E,0x00,0x00,0x7F,0xE0,0x08,0x04,
  84          0x20,0x47,0xEE,0x70,0x00,0x37,0x1C,0x00,0x00,0x1C,0x00,0x03,0xFF,0xC0,0x08,0x04,
  85          0x20,0x43,0xCE,0x70,0x00,0x07,0x33,0xF0,0x00,0x3D,0xE0,0x03,0xFF,0xC0,0x08,0x04,
  86          0x20,0x43,0xCE,0x70,0x00,0x0F,0xFF,0xF0,0x00,0x1F,0xF0,0x01,0xF9,0xFE,0x08,0x04,
  87          0x20,0x43,0xCE,0x70,0x00,0x1F,0xFF,0x00,0x00,0x1F,0xC0,0x00,0xF1,0xFE,0x08,0x04,
  88          0x20,0x43,0xDE,0x70,0x00,0x3D,0xE7,0x00,0x00,0x7F,0x00,0x00,0x01,0xFF,0x08,0x04,
  89          0x20,0x43,0xDE,0x70,0x00,0x7D,0x87,0x00,0x03,0xFE,0x00,0x00,0x01,0xFF,0x08,0x04,
  90          0x20,0x43,0x9E,0x70,0x00,0xFC,0x07,0x00,0x03,0xFF,0x00,0x00,0x01,0xCE,0x08,0x04,
  91          0x20,0x47,0x8E,0x70,0x01,0xFE,0x07,0x00,0x00,0xFF,0x80,0x00,0x01,0xC0,0x08,0x04,
  92          0x20,0x47,0x8C,0x70,0x03,0xDE,0x07,0x00,0x00,0x39,0xE0,0x00,0x01,0xC0,0x08,0x04,
  93          0x20,0x47,0x80,0x70,0x00,0x1E,0x07,0x00,0x00,0x38,0xF0,0x00,0x01,0xC0,0x08,0x04,
  94          0x20,0x43,0x00,0x70,0x00,0x1E,0x07,0x00,0x00,0x78,0x78,0x00,0x01,0xC0,0x08,0x04,
  95          0x20,0x40,0x00,0x70,0x00,0x1C,0x67,0x00,0x00,0xF0,0x3F,0x00,0x01,0xC0,0x08,0x04,
  96          0x20,0x40,0x00,0x78,0x00,0x1C,0x3F,0x00,0x01,0xE0,0x3F,0xC0,0x01,0xE0,0x08,0x04,
  97          0x20,0x40,0x00,0xF8,0x00,0x0C,0x1F,0x00,0x07,0x80,0x0F,0xE0,0x01,0xE0,0x08,0x04,
  98          0x20,0x40,0x00,0x78,0x00,0x00,0x0E,0x00,0x00,0x00,0x07,0xE0,0x01,0xE0,0x08,0x04,
  99          0x20,0x40,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x08,0x04,
 100          0x20,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x04,
 101          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 102          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 103          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 104          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 105          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 106          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 107          0x23,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC4,
 108          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 109          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 110          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 111          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 112          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 113          0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,
 114          0x23,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC4,
 115          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 116          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 117          0x20,0x00,0x00,0x00,0x03,0xC2,0x10,0x04,0x00,0x10,0x04,0x00,0x00,0x00,0x00,0x04,
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 3   

 118          0x20,0x00,0x00,0x00,0x7C,0x02,0x7E,0x3F,0xCF,0x90,0x04,0x00,0x00,0x00,0x00,0x04,
 119          0x20,0x00,0x00,0x00,0x08,0x85,0x10,0x20,0x40,0x10,0x7F,0xC0,0x00,0x00,0x00,0x04,
 120          0x20,0x00,0x00,0x00,0x3F,0x0F,0x20,0x20,0x40,0x3E,0x44,0x40,0x00,0x00,0x00,0x04,
 121          0x20,0x00,0x00,0x00,0x04,0x02,0x44,0x3F,0xCF,0xD2,0x44,0x40,0x00,0x00,0x00,0x04,
 122          0x20,0x00,0x00,0x00,0x08,0x84,0x7E,0x20,0x02,0x12,0x44,0x40,0x00,0x00,0x00,0x04,
 123          0x20,0x00,0x00,0x00,0x3F,0xCF,0x28,0x3F,0xC5,0x12,0x7F,0xC0,0x00,0x00,0x00,0x04,
 124          0x20,0x00,0x00,0x00,0x15,0x00,0x28,0x30,0x48,0x92,0x04,0x00,0x00,0x00,0x00,0x04,
 125          0x20,0x00,0x00,0x00,0x24,0x83,0x2A,0x50,0x4F,0xA2,0x04,0x00,0x00,0x00,0x00,0x04,
 126          0x20,0x00,0x00,0x00,0x44,0x4C,0x4A,0x50,0x48,0x44,0x04,0x00,0x00,0x00,0x00,0x04,
 127          0x20,0x00,0x00,0x00,0x9C,0x21,0x8E,0x9F,0xC0,0x9C,0x04,0x00,0x00,0x00,0x00,0x04,
 128          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 129          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 130          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 131          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,
 132          0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,
 133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
 135          
 136          
 137          unsigned char code tu2[]={
 138          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 139          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 140          0x00,0x30,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x06,0x00,0x00,0x00,
 141          0x00,0x30,0x03,0xFF,0x80,0xC1,0x80,0x03,0x00,0xFE,0x60,0x30,0x06,0x00,0x00,0x00,
 142          0x0F,0xFF,0xE0,0x30,0x00,0xDF,0xF8,0x03,0x00,0x6D,0xE6,0x31,0x86,0x00,0x00,0x00,
 143          0x00,0x30,0x00,0x63,0x81,0x83,0x00,0xFF,0xF8,0x6D,0xEC,0x31,0x86,0x00,0x00,0x00,
 144          0x00,0x38,0x00,0xC7,0x01,0xB6,0x60,0xC3,0x18,0x6D,0xEC,0x31,0x86,0x00,0x00,0x00,
 145          0x00,0x7C,0x01,0xFC,0x03,0x66,0x60,0xC3,0x18,0x7F,0x6C,0x31,0x86,0x00,0x00,0x00,
 146          0x00,0xFC,0x00,0x38,0xC3,0xEC,0x30,0xC3,0x18,0x6F,0x6C,0x31,0x86,0x00,0x00,0x00,
 147          0x00,0xF6,0x00,0xE0,0xC0,0xCF,0xF0,0xC3,0x18,0x6F,0x78,0x31,0x86,0x00,0x00,0x00,
 148          0x01,0xB3,0x03,0xFF,0xE0,0xC6,0xD8,0xFF,0xF8,0x7C,0x60,0x31,0x86,0x00,0x00,0x00,
 149          0x03,0x31,0x80,0xDB,0x61,0x86,0xC0,0xC3,0x18,0x6C,0x70,0x31,0x86,0x00,0x00,0x00,
 150          0x06,0x30,0xC0,0xD9,0x83,0xFE,0xC0,0xC3,0x18,0x6C,0xF0,0x31,0x86,0x00,0x00,0x00,
 151          0x0F,0xFF,0xE1,0x99,0xC3,0x86,0xD8,0xC3,0x18,0x6E,0xD8,0x31,0x86,0x00,0x00,0x00,
 152          0x00,0x30,0x03,0x18,0xC0,0x0C,0xD8,0xC3,0x18,0x7D,0x8C,0x61,0x86,0x00,0x00,0x00,
 153          0x00,0x30,0x03,0x18,0x60,0xFC,0xD8,0xC3,0x18,0xEF,0x0C,0x60,0x06,0x00,0x00,0x00,
 154          0x00,0x30,0x06,0x78,0x63,0xB8,0xF8,0xFF,0xF8,0x0E,0x06,0x60,0x06,0x00,0x00,0x00,
 155          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 156          0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 157          0x06,0x1F,0x81,0x83,0x01,0xF8,0x00,0xD8,0x0C,0x36,0x00,0x00,0x00,0x00,0x00,0x00,
 158          0x07,0x19,0x80,0xC3,0x00,0x63,0xF8,0xD8,0x6C,0x37,0xFE,0x00,0x00,0x00,0x00,0x00,
 159          0x03,0x19,0x80,0x03,0x00,0x66,0x19,0xFF,0x6C,0x37,0x80,0x00,0x00,0x00,0x00,0x00,
 160          0x00,0x31,0x80,0x03,0x00,0x66,0x19,0x98,0x6C,0x6D,0x80,0x00,0x00,0x00,0x00,0x00,
 161          0x0F,0x31,0xE3,0x83,0x03,0xFE,0x19,0xFF,0xEC,0x6D,0x80,0x00,0x00,0x00,0x00,0x00,
 162          0x03,0x00,0xC1,0xFF,0xF0,0x66,0x18,0x18,0x6C,0xED,0xFC,0x00,0x00,0x00,0x00,0x00,
 163          0x03,0x3F,0xC1,0x83,0x00,0xF6,0x18,0x18,0x6C,0xF9,0x80,0x00,0x00,0x00,0x00,0x00,
 164          0x03,0x18,0xC1,0x83,0x01,0xFE,0x18,0xFF,0x6C,0x61,0x80,0x00,0x00,0x00,0x00,0x00,
 165          0x03,0x19,0x81,0x83,0x01,0xEE,0x19,0x99,0xEC,0x61,0x80,0x00,0x00,0x00,0x00,0x00,
 166          0x03,0x0D,0x81,0x83,0x03,0x66,0x19,0x99,0xEC,0x61,0x80,0x3C,0x00,0x00,0x00,0x00,
 167          0x03,0x0F,0x01,0x83,0x00,0x66,0x19,0x99,0xEC,0x61,0xFE,0x6C,0x00,0x00,0x00,0x00,
 168          0x03,0xC7,0x01,0xB3,0x00,0x66,0x19,0x99,0x8C,0x61,0x80,0x6C,0x00,0x00,0x00,0x00,
 169          0x03,0x9D,0x81,0xE3,0x00,0x63,0xF9,0x99,0x8C,0x61,0x80,0x6C,0x00,0x00,0x00,0x00,
 170          0x00,0x70,0xE0,0xC3,0x00,0x60,0x01,0x9F,0x78,0x01,0x80,0x38,0x00,0x00,0x00,0x00,
 171          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 172          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 173          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 174          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 175          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 176          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 177          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 178          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 179          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 4   

 180          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 181          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 182          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 183          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 184          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 185          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 186          0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x01,0xFF,0x00,0x00,0x3F,0xE0,0x00,
 187          0x00,0x00,0x01,0xE3,0xC7,0x8F,0x0F,0xF8,0xF1,0xE1,0x83,0x1E,0x3C,0x30,0x60,0x00,
 188          0x00,0x00,0x03,0x36,0x6C,0xD9,0x98,0xC1,0x9B,0x31,0x83,0x33,0x66,0x30,0x60,0x00,
 189          0x00,0x00,0x03,0x36,0x6C,0xD9,0x98,0xC1,0x9B,0x31,0xFF,0x33,0x66,0x30,0x60,0x00,
 190          0x00,0x00,0x00,0x66,0x6C,0xD9,0x8F,0xF9,0x9B,0x31,0x83,0x06,0x66,0x3F,0xE0,0x00,
 191          0x00,0x00,0x00,0xC6,0x6C,0xCF,0x8C,0xC1,0x99,0xF1,0x83,0x0C,0x66,0x30,0x60,0x00,
 192          0x00,0x00,0x01,0x86,0x6C,0xC1,0x8C,0xC1,0x98,0x31,0xFF,0x18,0x66,0x30,0x60,0x00,
 193          0x00,0x00,0x03,0x06,0x6C,0xCD,0x9F,0xFD,0x99,0xB1,0x83,0x30,0x66,0x30,0x60,0x00,
 194          0x00,0x00,0x03,0xF3,0xC7,0x8F,0x00,0xC0,0xF1,0xE3,0x03,0x3F,0x3C,0x30,0x60,0x00,
 195          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x03,0x03,0x00,0x00,0x3F,0xE0,0x00,
 196          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x06,0x0E,0x00,0x00,0x00,0x00,0x00,
 197          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 198          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 199          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 200          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 201          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
 202          
 203          unsigned char code zi[]={"欢迎使用本产品，本系统是基于高科技产品。"
 204          "系统具有四个双向口，输入输出电流大，防雷击，抗击打能力强，集成全球卫星定位系统"
 205          "是一款不可多得的神奇产品。走路，千万不要错，就像一张张、一层层无形的网，无论你的人生是忙碌"
 206          "的，还是快乐的。它总会在某个不经意间将你罩。要么冲破它，"
 207          "要么被缠绕。人生难免寂寞。只能感悟。只有面对。"};
 208          
 209          void delayms(unsigned int z)
 210          {
 211   1              unsigned int x,y;
 212   1              for(x=z;x>0;x--)
 213   1                      for(y=110;y>0;y--);
 214   1      }
 215          void delayus(unsigned int t)
 216          {
 217   1              while(--t);
 218   1      
 219   1      }
 220          
 221          
 222          
 223          
 224          void wr_com(unsigned char value)//写指令，写指令时必须为RS=0;RW=0;
 225          {
 226   1              E_clear;
 227   1              RS_clear;
 228   1              RW_clear;
 229   1              delayus(1);
 230   1              P0=value;
 231   1              E_set;
 232   1              delayus(10); //如果没有延时就必须要加查忙指令
 233   1              E_clear;
 234   1              delayus(1);
 235   1      }
 236          unsigned char rd_data(void)
 237          {
 238   1              unsigned char sj;
 239   1              P0=0xFF;
 240   1              E_clear;
 241   1              RS_set;
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 5   

 242   1              RW_set;
 243   1              delayus(1);
 244   1              E_set;
 245   1              delayus(10);//如果没有延时就必须要加查忙指令
 246   1              sj=P0;
 247   1              E_clear;
 248   1              return sj;      
 249   1      }
 250          void wr_data(unsigned char sj)//写数据，写数据时必须为 RS=1;RW=0;
 251          {
 252   1      
 253   1              E_clear;
 254   1              RS_set;
 255   1              RW_clear;
 256   1              delayus(1);
 257   1              P0=sj;
 258   1              E_set;
 259   1              delayus(10);//如果没有延时就必须要加查忙指令
 260   1              E_clear;
 261   1              delayus(1);
 262   1      }
 263          void WRDataXY(uchar x,uchar y, uchar Data,bit color)
 264          {
 265   1              unsigned char tempL,tempH,temx,tem;
 266   1              //wr_com(0x34);
 267   1              //wr_com(0x36);   //切换到扩展指令集并打开绘图模式
 268   1              
 269   1              temx=x;
 270   1              x=temx/4;
 271   1      
 272   1      
 273   1              if(color==0)
 274   1              Data=~Data;
 275   1              
 276   1              
 277   1              if( y >= 32 )
 278   1              {
 279   2              y=y-32;
 280   2              x=x+8;
 281   2          }
 282   1      
 283   1              wr_com(0x80|y);     //行位置
 284   1          wr_com(0x80|x);     //列位置
 285   1              rd_data();
 286   1              tempL=rd_data();
 287   1              tempH=rd_data();
 288   1              temx=temx%4;
 289   1              if(temx==0)
 290   1               {  tem=(tempL&0x0F)|(Data<<4);
 291   2                      tempL=tem;
 292   2               }
 293   1              else if(temx==1)
 294   1              {
 295   2                      tem=(tempL&0xF0)|(Data&0x0F);
 296   2                      tempL=tem;
 297   2              }
 298   1              else if(temx==2)
 299   1              {
 300   2                      tem=(tempH&0x0F)|(Data<<4);
 301   2                      tempH=tem;
 302   2              }               
 303   1              else
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 6   

 304   1              {  
 305   2                      tem=(tempH&0xF0)|(Data&0x0F);
 306   2                      tempH=tem;
 307   2              }
 308   1               //tempL=Data;
 309   1      
 310   1               //tempH=Data;  
 311   1                 wr_com(0x80|y);     //行位置
 312   1             wr_com(0x80|x);     //列位置
 313   1                 wr_data(tempL);
 314   1                 wr_data(tempH);
 315   1      
 316   1                //wr_com(0x30); //恢复至基本指令集
 317   1      }
 318          void reset (void)
 319          {
 320   1              wr_com(0x30);//功能设置，一次送8位数据，基本指令集
 321   1              wr_com(0x0C);//0000,1100  整体显示，游标off，游标位置off
 322   1              wr_com(0x01);//0000,0001 清DDRAM   清屏
 323   1              wr_com(0x02);//0000,0010 DDRAM地址归位
 324   1              wr_com(0x80);//1000,0000 设定DDRAM 7位地址000，0000到地址计数器AC//     
 325   1              wr_com(0x04);//点设定，显示字符/光标从左到右移位，DDRAM地址加 一//   
 326   1              wr_com(0x0C);//显示设定，开显示，显示光标，当前显示位反白闪动
 327   1              wr_com(0x01);//清屏        */
 328   1      }
 329          //****************
 330          //outChinese 为函数名
 331          //place 为显示地址的首地址
 332          //unit 字符长度
 333          //point 要显示数据的指针
 334          void outChinese(unsigned char place,unsigned char unit,unsigned char *point)
 335          {
 336   1              unsigned char i,progdata;
 337   1              wr_com(place);
 338   1              for(i=0;i<unit*2;i++)//一个汉字为两个字符
 339   1              {
 340   2              progdata=*(point+i);
 341   2              wr_data(progdata);
 342   2              }
 343   1      }
 344          void outchar(unsigned char place,unsigned char unit,unsigned char *point)
 345          {
 346   1              unsigned char i,progdata;
 347   1              wr_com(place);
 348   1              for(i=0;i<unit;i++)
 349   1              {
 350   2                      progdata=*(point+i);
 351   2                      wr_data(progdata);
 352   2              }
 353   1      }
 354          
 355          //---------------------清屏函数(开机消除噪点)----------------------------//
 356          //参数的使用说明：f=0时清屏；f=1时逐行清屏 
 357          void GCCDRAMCL(bit f)
 358          {
 359   1              uchar i,j;
 360   1              wr_com(0x34);
 361   1              if(f)
 362   1              wr_com(0x36);
 363   1      
 364   1              for(i=0;i<32;i++)            //12864实际为256x32
 365   1           {
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 7   

 366   2               for(j=0;j<8;j++)                                            //上半屏，
 367   2                              {
 368   3                                 wr_com(0x80|i);      //行位置
 369   3                         wr_com(0x80|j);      //列位置
 370   3                                 wr_data(0x00);
 371   3                                 wr_data(0x00);
 372   3                          }
 373   2              
 374   2           }
 375   1                      for(i=0;i<32;i++)            //12864实际为256x32
 376   1           {
 377   2               for(j=8;j<16;j++)
 378   2                              {                                                                                 //下半屏
 379   3                                 wr_com(0x80|i);      //行位置
 380   3                         wr_com(0x80|j);      //列位置
 381   3                                 wr_data(0x00);
 382   3                                 wr_data(0x00);
 383   3                          }
 384   2              
 385   2           }
 386   1              wr_com(0x36); 
 387   1      }
 388          //---------------------清屏函数(开机消除噪点)----------------------------//
 389          
 390          
 391          //---------------------画图函数----------------------------//
 392          //参数的使用说明：
 393          //                flag1=0时画面数据取反；flag1=1时画面数据不变 
 394          //                flag2=0时动态逐行显示；flag2=1时整体显示 
 395          //画图参数：      a1表示开始X地址(0-7) 
 396          //                b1表示开始Y地址(0-127)
 397          //                                a2表示结束X地址(0-7)
 398          //                                b2表示结束Y地址(0-127)  
 399          void huitu(bit flg1,bit flg2,uchar a1,uchar a2,uchar b1,uchar b2,unsigned char *puts)
 400          {
 401   1           unsigned int x=0;
 402   1           unsigned char i,j;
 403   1           wr_com(0x34);      //8Bit扩充指令集,即使是36H也要写两次
 404   1      
 405   1               if(flg2)
 406   1                wr_com(0x36); 
 407   1      
 408   1               //wr_com(0x01);//清屏
 409   1      
 410   1        if(b1<32&&b2<32)
 411   1        {
 412   2         
 413   2          for(i=b1;i<b2+1;i++)            ////行地址计数
 414   2           {                                                   //列地址计数
 415   3      
 416   3                 for(j=a1;j<a2+1;j++)
 417   3                                {
 418   4                                 wr_com(0x80|i);      //输入行地址
 419   4                         wr_com(0x80|j);      //输入列地址
 420   4                                 if(flg1)
 421   4                                  { wr_data(puts[x++]); //输入高位字节数据
 422   5                                    wr_data(puts[x++]);  //输入低位字节数据
 423   5                                      }
 424   4                                      else
 425   4                                      {
 426   5                                        wr_data(~puts[x++]);
 427   5                                    wr_data(~puts[x++]);
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 8   

 428   5                                      }
 429   4                                }
 430   3              
 431   3           }
 432   2        }
 433   1        else if(b1<32&&b2>31)
 434   1        {
 435   2                 for(i=b1;i<32;i++)            ////行地址计数
 436   2           {                                                   //列地址计数
 437   3      
 438   3                 for(j=a1;j<a2+1;j++)            //上半屏
 439   3                                {
 440   4                                 wr_com(0x80|i);      //输入行地址
 441   4                         wr_com(0x80|j);      //输入列地址
 442   4                                 if(flg1)
 443   4                                  { wr_data(puts[x++]); //输入高位字节数据
 444   5                                    wr_data(puts[x++]);  //输入低位字节数据
 445   5                                      }
 446   4                                      else
 447   4                                      {
 448   5                                        wr_data(~puts[x++]);
 449   5                                    wr_data(~puts[x++]);
 450   5                                      }
 451   4                                }
 452   3              
 453   3           }
 454   2                 for(i=0;i<b2-31;i++)            //12864实际为256x32
 455   2           {                                                             //下半屏
 456   3                 for(j=8+a1;j<a2+9;j++)
 457   3                                {
 458   4                                 wr_com(0x80|i);      //行位置
 459   4                         wr_com(0x80|j);      //列位置
 460   4                                 if(flg1)
 461   4                                  { wr_data(puts[x++]);
 462   5                                    wr_data(puts[x++]);
 463   5                                      }
 464   4                                      else
 465   4                                      {
 466   5                                        wr_data(~puts[x++]);
 467   5                                    wr_data(~puts[x++]);
 468   5                                      }
 469   4                                }
 470   3           
 471   3           }
 472   2        }
 473   1        else if(b1>31&&b2>31)
 474   1        {
 475   2                 for(i=b1-31;i<b2-31;i++)            //
 476   2           {
 477   3                 for(j=8+a1;j<a2+9;j++)
 478   3                                {
 479   4                                 wr_com(0x80|i);      //行位置
 480   4                         wr_com(0x80|j);      //列位置
 481   4                                 if(flg1)
 482   4                                  { wr_data(puts[x++]);
 483   5                                    wr_data(puts[x++]);
 484   5                                      }
 485   4                                      else
 486   4                                      {
 487   5                                        wr_data(~puts[x++]);
 488   5                                    wr_data(~puts[x++]);
 489   5                                      }
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 9   

 490   4                                }
 491   3           
 492   3           }  
 493   2        
 494   2        }
 495   1      
 496   1      
 497   1               wr_com(0x36);      //绘图ON,基本指令集里面36H不能开绘图
 498   1               wr_com(0x30); //恢复至基本指令集       
 499   1      }
 500          //---------------------画图函数 end----------------------------//
 501          
 502          void initUart(void)
 503          {
 504   1               TMOD|=0x20;
 505   1               SCON=0x50;
 506   1               PCON|=0x80;
 507   1               TH1=0xfd;
 508   1               TL1=0xfd;
 509   1               TR1=1;
 510   1               ES=1;
 511   1               EA=1;
 512   1      }
 513          
 514          void ydgb(void)
 515          {
 516   1              wr_com(yb);//显示光标位置
 517   1              yb=yb+0x01;
 518   1              if(yb==0x88){yb=0x90;}
 519   1              if(yb==0x97){yb=0x88;}
 520   1              if(yb==0x8f){yb=0x98;}
 521   1              if(yb==0xa0){yb=0x80;}
 522   1      }
 523          
 524          
 525          
 526          void WRData(uchar x,uchar y, LData,HData)
 527          {
 528   1              wr_com(0x36);     //切换到扩展指令集并打开绘图模式
 529   1              if(y<32)
 530   1              {
 531   2                                                 //上半屏，
 532   2                 wr_com(0x80|y);     //行位置
 533   2             wr_com(0x80|x);     //列位置
 534   2                 wr_data(LData);
 535   2                 wr_data(HData);
 536   2               }
 537   1               if(y>=32)
 538   1                      
 539   1           {
 540   2                                                                      //下半屏
 541   2                 wr_com(0x80|(y-32));     //行位置
 542   2             wr_com(0x80|(x+8));      //列位置
 543   2                 wr_data(LData);
 544   2                 wr_data(HData);
 545   2           }
 546   1                wr_com(0x30); //恢复至基本指令集
 547   1      }
 548          void donghua()
 549          {
 550   1           uchar i,temp,j,k;
 551   1              
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 10  

 552   1      
 553   1               huitu(1,1,0,7,0,63,tu1);
 554   1               beer=0;
 555   1               delayms(1000);
 556   1                wr_com(0x36);
 557   1               beer=1;
 558   1               temp=0;
 559   1               for(i=0;i<8;i++)
 560   1               {
 561   2                       temp=temp|(1<<(7-i));
 562   2               for(k=38;k<42;k++)
 563   2                       WRData(0,k,0x22,temp);
 564   2                       delayms(20);
 565   2                      
 566   2               }
 567   1               for(i=1;i<7;i++)
 568   1              {
 569   2                       temp=0;        
 570   2                       for(j=0;j<8;j++)
 571   2                   {
 572   3                              temp=temp|(1<<(7-j));
 573   3                              for(k=38;k<42;k++)
 574   3                              WRData(i,k,temp,0x00);
 575   3                              delayms(20);
 576   3                       }
 577   2                      temp=0; 
 578   2                       for(j=0;j<8;j++)
 579   2                   {  
 580   3                              temp=temp|(1<<(7-j));
 581   3                              for(k=38;k<42;k++)
 582   3                              WRData(i,k,0xFF,temp);
 583   3                              delayms(20);    
 584   3                       }
 585   2                          
 586   2               }
 587   1                        temp=0;       
 588   1                        for(j=0;j<8;j++)
 589   1                  {   
 590   2                              temp=temp|(1<<(7-j));
 591   2                              for(k=38;k<42;k++)
 592   2                              WRData(7,k,temp,0x44);
 593   2                      delayms(20);
 594   2                       }
 595   1      
 596   1               
 597   1                      wr_com(0x30); //恢复至基本指令集                        
 598   1      }
 599          
 600          //写一页子程序
 601          void write_page(unsigned int t, unsigned char *point)
 602          {
 603   1          unsigned int m,n,i; 
 604   1              t+=1;     
 605   1              for(m=0;m<5*64;m+=64)
 606   1              {       
 607   2                      n=t;
 608   2                      if(flagCom) break;
 609   2                      wr_com(0x01);
 610   2                      outChinese(0x80,8,point+m);   //第一行：80-87H
 611   2                      outChinese(0x90,8,point+16+m);//第二行：90-97H
 612   2                      outChinese(0x88,8,point+32+m);//第三行：88-8FH
 613   2                      outChinese(0x98,8,point+48+m);//第四行：98-9FH
C51 COMPILER V9.02   12864                                                                 08/18/2010 09:39:55 PAGE 11  

 614   2                      
 615   2                      while(n--)
 616   2                      { 
 617   3                        for(i=0;i<100;i++)
 618   3                        if(flagCom) break;
 619   3                        if(flagCom) break;
 620   3                      }
 621   2              
 622   2                      
 623   2               }
 624   1              
 625   1         
 626   1      }
 627          void SendRS232(uchar t)
 628          {
 629   1              SBUF=t;
 630   1              while(!TI);     
 631   1              TI=0;
 632   1      }
 633          
 634          void main(void)
 635          {
 636   1      
 637   1              initUart();
 638   1              reset();
 639   1              GCCDRAMCL(1);
 640   1              donghua();
 641   1              huitu(1,0,0,7,0,63,tu2);
 642   1          delayms(2000);
 643   1              wr_com(0x01);
 644   1              wr_com(0x30);
 645   1      
 646   1           while(1)
 647   1         {
 648   2              outChinese(0x90,8,"仿真模型测试演示");//第二行：90-97H
 649   2                      delayms(1000);
 650   2                      write_page(10000,zi);
 651   2              }
 652   1      
 653   1      
 654   1      }
 655          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2000    ----
   CONSTANT SIZE    =   2631    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
